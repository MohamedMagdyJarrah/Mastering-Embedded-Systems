
Embedded_C_Lab1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001bc  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002ec  080002ec  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002ec  080002ec  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  080002ec  080002ec  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002ec  080002ec  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002ec  080002ec  000102ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002f0  080002f0  000102f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  080002f4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000004  080002f8  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  080002f8  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000154  00000000  00000000  0002002d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000f1  00000000  00000000  00020181  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00020278  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  000202c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000f40  00000000  00000000  000202f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000470  00000000  00000000  00021230  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003b8d  00000000  00000000  000216a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002522d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000058  00000000  00000000  00025280  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000004 	.word	0x20000004
 800014c:	00000000 	.word	0x00000000
 8000150:	080002d4 	.word	0x080002d4

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000008 	.word	0x20000008
 800016c:	080002d4 	.word	0x080002d4

08000170 <main>:
}R_ODR_t;

volatile R_ODR_t* R_ODR = (volatile R_ODR_t*)(GPIOA_BASE+0x0C);

int main(void)
{
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
	uint32_t i=0;
 8000176:	2300      	movs	r3, #0
 8000178:	607b      	str	r3, [r7, #4]
	RCC_APB2ENR |= (1<<3);		/*Setting bit to enable clock for pin*/
 800017a:	4b2b      	ldr	r3, [pc, #172]	; (8000228 <main+0xb8>)
 800017c:	681b      	ldr	r3, [r3, #0]
 800017e:	4a2a      	ldr	r2, [pc, #168]	; (8000228 <main+0xb8>)
 8000180:	f043 0308 	orr.w	r3, r3, #8
 8000184:	6013      	str	r3, [r2, #0]
	GPIOA_CRH &= 0xff0fffff;	/*Masking Register*/
 8000186:	4b29      	ldr	r3, [pc, #164]	; (800022c <main+0xbc>)
 8000188:	681b      	ldr	r3, [r3, #0]
 800018a:	4a28      	ldr	r2, [pc, #160]	; (800022c <main+0xbc>)
 800018c:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8000190:	6013      	str	r3, [r2, #0]
	GPIOA_CRH |= 0x00200000;	/*Setting mode of the pin*/
 8000192:	4b26      	ldr	r3, [pc, #152]	; (800022c <main+0xbc>)
 8000194:	681b      	ldr	r3, [r3, #0]
 8000196:	4a25      	ldr	r2, [pc, #148]	; (800022c <main+0xbc>)
 8000198:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800019c:	6013      	str	r3, [r2, #0]

	while(1)
	{
		/*Turning led on*/
		GPIOA_ODR |= (1<<3);
 800019e:	4b24      	ldr	r3, [pc, #144]	; (8000230 <main+0xc0>)
 80001a0:	681b      	ldr	r3, [r3, #0]
 80001a2:	4a23      	ldr	r2, [pc, #140]	; (8000230 <main+0xc0>)
 80001a4:	f043 0308 	orr.w	r3, r3, #8
 80001a8:	6013      	str	r3, [r2, #0]
		for(i=0;i<5000;i++);
 80001aa:	2300      	movs	r3, #0
 80001ac:	607b      	str	r3, [r7, #4]
 80001ae:	e002      	b.n	80001b6 <main+0x46>
 80001b0:	687b      	ldr	r3, [r7, #4]
 80001b2:	3301      	adds	r3, #1
 80001b4:	607b      	str	r3, [r7, #4]
 80001b6:	687b      	ldr	r3, [r7, #4]
 80001b8:	f241 3287 	movw	r2, #4999	; 0x1387
 80001bc:	4293      	cmp	r3, r2
 80001be:	d9f7      	bls.n	80001b0 <main+0x40>
		/*Turning led off*/
		GPIOA_ODR &= ~(1<<3);
 80001c0:	4b1b      	ldr	r3, [pc, #108]	; (8000230 <main+0xc0>)
 80001c2:	681b      	ldr	r3, [r3, #0]
 80001c4:	4a1a      	ldr	r2, [pc, #104]	; (8000230 <main+0xc0>)
 80001c6:	f023 0308 	bic.w	r3, r3, #8
 80001ca:	6013      	str	r3, [r2, #0]
		for(i=0;i<5000;i++);
 80001cc:	2300      	movs	r3, #0
 80001ce:	607b      	str	r3, [r7, #4]
 80001d0:	e002      	b.n	80001d8 <main+0x68>
 80001d2:	687b      	ldr	r3, [r7, #4]
 80001d4:	3301      	adds	r3, #1
 80001d6:	607b      	str	r3, [r7, #4]
 80001d8:	687b      	ldr	r3, [r7, #4]
 80001da:	f241 3287 	movw	r2, #4999	; 0x1387
 80001de:	4293      	cmp	r3, r2
 80001e0:	d9f7      	bls.n	80001d2 <main+0x62>

		/*Turning led on*/
		R_ODR->Pin.P_13 = 1;
 80001e2:	4b14      	ldr	r3, [pc, #80]	; (8000234 <main+0xc4>)
 80001e4:	681a      	ldr	r2, [r3, #0]
 80001e6:	8813      	ldrh	r3, [r2, #0]
 80001e8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80001ec:	8013      	strh	r3, [r2, #0]
		for(i=0;i<5000;i++);
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <main+0x8a>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	f241 3287 	movw	r2, #4999	; 0x1387
 8000200:	4293      	cmp	r3, r2
 8000202:	d9f7      	bls.n	80001f4 <main+0x84>
		/*Turning led off*/
		R_ODR->Pin.P_13 = 0;
 8000204:	4b0b      	ldr	r3, [pc, #44]	; (8000234 <main+0xc4>)
 8000206:	681a      	ldr	r2, [r3, #0]
 8000208:	8813      	ldrh	r3, [r2, #0]
 800020a:	f36f 334d 	bfc	r3, #13, #1
 800020e:	8013      	strh	r3, [r2, #0]
		for(i=0;i<5000;i++);
 8000210:	2300      	movs	r3, #0
 8000212:	607b      	str	r3, [r7, #4]
 8000214:	e002      	b.n	800021c <main+0xac>
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	3301      	adds	r3, #1
 800021a:	607b      	str	r3, [r7, #4]
 800021c:	687b      	ldr	r3, [r7, #4]
 800021e:	f241 3287 	movw	r2, #4999	; 0x1387
 8000222:	4293      	cmp	r3, r2
 8000224:	d9f7      	bls.n	8000216 <main+0xa6>
		GPIOA_ODR |= (1<<3);
 8000226:	e7ba      	b.n	800019e <main+0x2e>
 8000228:	40021018 	.word	0x40021018
 800022c:	40010804 	.word	0x40010804
 8000230:	4001080c 	.word	0x4001080c
 8000234:	20000000 	.word	0x20000000

08000238 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000238:	480d      	ldr	r0, [pc, #52]	; (8000270 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800023a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800023c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000240:	480c      	ldr	r0, [pc, #48]	; (8000274 <LoopForever+0x6>)
  ldr r1, =_edata
 8000242:	490d      	ldr	r1, [pc, #52]	; (8000278 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000244:	4a0d      	ldr	r2, [pc, #52]	; (800027c <LoopForever+0xe>)
  movs r3, #0
 8000246:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000248:	e002      	b.n	8000250 <LoopCopyDataInit>

0800024a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800024a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800024c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800024e:	3304      	adds	r3, #4

08000250 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000250:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000252:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000254:	d3f9      	bcc.n	800024a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000256:	4a0a      	ldr	r2, [pc, #40]	; (8000280 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000258:	4c0a      	ldr	r4, [pc, #40]	; (8000284 <LoopForever+0x16>)
  movs r3, #0
 800025a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800025c:	e001      	b.n	8000262 <LoopFillZerobss>

0800025e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800025e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000260:	3204      	adds	r2, #4

08000262 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000262:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000264:	d3fb      	bcc.n	800025e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000266:	f000 f811 	bl	800028c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800026a:	f7ff ff81 	bl	8000170 <main>

0800026e <LoopForever>:

LoopForever:
  b LoopForever
 800026e:	e7fe      	b.n	800026e <LoopForever>
  ldr   r0, =_estack
 8000270:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8000274:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000278:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 800027c:	080002f4 	.word	0x080002f4
  ldr r2, =_sbss
 8000280:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 8000284:	20000020 	.word	0x20000020

08000288 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000288:	e7fe      	b.n	8000288 <ADC1_2_IRQHandler>
	...

0800028c <__libc_init_array>:
 800028c:	b570      	push	{r4, r5, r6, lr}
 800028e:	2600      	movs	r6, #0
 8000290:	4d0c      	ldr	r5, [pc, #48]	; (80002c4 <__libc_init_array+0x38>)
 8000292:	4c0d      	ldr	r4, [pc, #52]	; (80002c8 <__libc_init_array+0x3c>)
 8000294:	1b64      	subs	r4, r4, r5
 8000296:	10a4      	asrs	r4, r4, #2
 8000298:	42a6      	cmp	r6, r4
 800029a:	d109      	bne.n	80002b0 <__libc_init_array+0x24>
 800029c:	f000 f81a 	bl	80002d4 <_init>
 80002a0:	2600      	movs	r6, #0
 80002a2:	4d0a      	ldr	r5, [pc, #40]	; (80002cc <__libc_init_array+0x40>)
 80002a4:	4c0a      	ldr	r4, [pc, #40]	; (80002d0 <__libc_init_array+0x44>)
 80002a6:	1b64      	subs	r4, r4, r5
 80002a8:	10a4      	asrs	r4, r4, #2
 80002aa:	42a6      	cmp	r6, r4
 80002ac:	d105      	bne.n	80002ba <__libc_init_array+0x2e>
 80002ae:	bd70      	pop	{r4, r5, r6, pc}
 80002b0:	f855 3b04 	ldr.w	r3, [r5], #4
 80002b4:	4798      	blx	r3
 80002b6:	3601      	adds	r6, #1
 80002b8:	e7ee      	b.n	8000298 <__libc_init_array+0xc>
 80002ba:	f855 3b04 	ldr.w	r3, [r5], #4
 80002be:	4798      	blx	r3
 80002c0:	3601      	adds	r6, #1
 80002c2:	e7f2      	b.n	80002aa <__libc_init_array+0x1e>
 80002c4:	080002ec 	.word	0x080002ec
 80002c8:	080002ec 	.word	0x080002ec
 80002cc:	080002ec 	.word	0x080002ec
 80002d0:	080002f0 	.word	0x080002f0

080002d4 <_init>:
 80002d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002d6:	bf00      	nop
 80002d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002da:	bc08      	pop	{r3}
 80002dc:	469e      	mov	lr, r3
 80002de:	4770      	bx	lr

080002e0 <_fini>:
 80002e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002e2:	bf00      	nop
 80002e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002e6:	bc08      	pop	{r3}
 80002e8:	469e      	mov	lr, r3
 80002ea:	4770      	bx	lr
